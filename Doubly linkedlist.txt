#include <iostream>
using namespace std;

struct node{
    int data;
    node* prev;
    node* next;
};

class doublyll{
private:
    node* tail;
    node* head;
public:
    doublyll() {
        head = nullptr;
        tail = nullptr;
    }

    void insertathead(int val)
    {
        node* newnode = new node;
        newnode->data = val;
        newnode->next = head;
        if(head) {
            head->prev = newnode;
        }
        head = newnode;
        if(!tail) {
            tail = newnode;
        }
    }

    void insertattail(int val)
    {
        node* newnode = new node;
        newnode->data = val;
        if (!tail) {
            head = newnode;
            tail = newnode;
        } else {
            tail->next = newnode;
            newnode->prev = tail;
            tail = newnode;
        }
    }

    void deleteathead()
    {
        node* temp3 = head;
        head = head->next;
        if (head) {
            head->prev = nullptr;
        } else {
            tail = nullptr;
        }
        delete temp3;
    }

    void deleteattail()
    {
        node* temp4 = tail;
        tail = tail->prev;
        if (tail) {
            tail->next = nullptr;
        } else {
            head = nullptr;
        }
        delete temp4;
    }

    void insertatanypos(int pos,int val)
    {
        if(pos==1)
        {
            insertathead(val);
        }
        node*temp=head;

        int count=1;

        while(count<pos)
        {
            temp=temp->next;
            count++;


        }
        node*newnode=new node;
        newnode->data=val;
        temp->prev->next=newnode;
        newnode->next=temp;
        newnode->prev=temp->prev;
        temp->prev=newnode;


    }

    void display() {
        node* temp = head;
        while (temp) {
            cout << temp->data << " ";
            temp = temp->next;
        }
        cout << endl;
    }
};

int main() {
    doublyll dll;

    dll.insertathead(10);
    dll.insertathead(20);
    dll.insertathead(30);
    dll.insertattail(40);
    dll.insertattail(50);



   dll.deleteathead();
    dll.deleteattail();
    dll.insertatanypos(2,70);

    dll.display(); 

    
}