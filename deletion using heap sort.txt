#include<iostream>
using namespace std;

class heap{
    

    
public:
    int sizeofarray;
    int array[100];
    heap()
    {
         sizeofarray=0;
        array[0]=-1;
    }
    void insert(int value) {
        sizeofarray++;
        int index = sizeofarray;

        array[index] = value; 

        // Adjust the position of the newly inserted value (heapify-up)
        while (index > 1) {
            int parent = index / 2;
            if (array[parent] < array[index]) {
                swap(array[parent], array[index]);
                index = parent;  // Move index up to the parent's position
            } else {
                break;  // If parent is larger, we are done
            }
        }
    }

    void deleteheap()
    {
        if(sizeofarray==0)
        {
            return;
        }
        swap(array[1],array[sizeofarray]);
        sizeofarray--;
        int i=1;
        while(i<sizeofarray)
        {

            int left=2*i;
            int right=2*i+1;
            if(left<sizeofarray && array[left]>array[i])
            {
                swap(array[left],array[i]);
                i=left;
            }
            if(right<sizeofarray && array[right]>array[i])
            {
                swap(array[right],array[i]);
                i=right;
            }
            else
            {
                return ;
            }
        }

    }

    void print()
    {

        for(int i=1;i<=sizeofarray;i++)
        {
            cout<<array[i]<<" ";
        }
    }

    
    
};

int main()
{
    heap h;
    h.insert(50);
    h.insert(55);
    h.insert(53);
    h.insert(52);
    h.insert(54);

    h.deleteheap();
    h.print();
}