/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* deleteDuplicates(ListNode* head) {


        ListNode*temp=head;
        ListNode*curr=head->next;
        while(curr!=nullptr && temp!=nullptr)
        {
            if(curr->val==temp->val)
            {
                ListNode*cnt=curr;
                temp->next=cnt->next;
                delete cnt;
                curr=temp->next;
            }
            else
            {
                temp=temp->next;
                curr=curr->next;

            }
            ListNode*tempo=head;
            ListNode*forward=tempo->next;
            while(tempo!=nullptr && forward!=nullptr)
            {
                if(tempo->val > tempo->next->val)
                {
                    forward=tempo->next;
                    tempo->next=forward->next;
                    forward->next=tempo;

                }
                else
                {
                    
                    tempo=tempo->next;
                    forward=forward->next;
                }
            }
        } 
        return head;
    }
};